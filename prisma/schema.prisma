// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")  // Pooled URL for the app runtime
  directUrl = env("POSTGRES_URL_NON_POOLING") // Non-pooled URL for migrations
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  currency  String   @default("USD")
  balance   Float    @default(0.0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  transactions        Transaction[]
  budgets             Budget[]
  recurringTransactions RecurringTransaction[]

  @@map("users")
}

model Transaction {
  id          String   @id @default(cuid())
  amount      Decimal  @db.Decimal(15, 2)
  description String
  category    String
  type        TransactionType
  date        DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("transactions")
}

model Budget {
  id          String   @id @default(cuid())
  category    String
  limit       Decimal  @db.Decimal(15, 2)
  spent       Decimal  @default(0) @db.Decimal(15, 2)
  period      BudgetPeriod @default(MONTHLY)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("budgets")
}

model RecurringTransaction {
  id          String   @id @default(cuid())
  amount      Decimal  @db.Decimal(15, 2)
  description String
  category    String
  type        TransactionType
  frequency   RecurringFrequency
  startDate   DateTime
  endDate     DateTime?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("recurring_transactions")
}

enum TransactionType {
  INCOME
  EXPENSE
}

enum BudgetPeriod {
  MONTHLY
  YEARLY
}

enum RecurringFrequency {
  WEEKLY
  MONTHLY
}